<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
 
 	<bean class="uk.gov.dwp.digital.addresslookup.controllers.PostCodeController">
 		<constructor-arg index="0" ref="postCodeService" />
 		<constructor-arg index="1" ref="validator" />
 	</bean>

	<!-- support JSR303 annotation if JSR 303 validation present on classpath -->
	<mvc:annotation-driven />
	
	
	<bean id="localValidator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	<bean id="validator" class="org.springframework.validation.beanvalidation.SpringValidatorAdapter">
		<constructor-arg index="0" ref="localValidator"/>
	</bean>
	
	<bean id="postCodeService" class="uk.gov.dwp.digital.addresslookup.service.impl.PostCodeServiceImpl"/>

  	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:message_en" />
    </bean>	
 
 	<!-- 
 		 JSP View Resolver - will only deal with views with a suffix of jsp
 	     this allows us to have a different view resolver that we can get to work 
 	     with ThymeLeaf
 	 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="viewNames" value="*jsp" />
	</bean>

 	<!-- 
 		 ThymeLeaf View Resolver and Template Engine- will only deal with views with a suffix of html
 	     which allows us to differentiate between ThymeLeaf and JSP views.
 	     with ThymeLeaf
 	 -->	
	<bean id="templateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
	  <property name="prefix" value="/WEB-INF/views/" />
	  <property name="templateMode" value="HTML5" />
	  <property name="cacheable" value="false"/>
	</bean>
    
	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
	  <property name="templateResolver" ref="templateResolver" />
	</bean>
	
	<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
    	<property name="templateEngine" ref="templateEngine" />
    	<property name="viewNames" value="*.html" />
  	</bean>
  	
</beans>